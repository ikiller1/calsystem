[{"id":123},{"lastModified":1497598546},{"qwe":"If you need to save really large files bigger then the blob's size limitation or don't have \r\nenough RAM, then have a look at the more advanced [StreamSaver.js](https:\/\/github.com\/jimmywarting\/StreamSaver.js)\r\nthat can save data directly to the hard drive asynchronously with the power of the new streams API. That will have\r\nsupport for progress, cancelation and knowing when it's done writing\r\n\r\nFileSaver.js\r\n============\r\n\r\nFileSaver.js implements the `saveAs()` FileSaver interface in browsers that do\r\nnot natively support it. There is a [FileSaver.js demo][1] that demonstrates saving\r\nvarious media types.\r\n\r\nFileSaver.js is the solution to saving files on the client-side, and is perfect for\r\nwebapps that need to generate files, or for saving sensitive information that shouldn't be\r\nsent to an external server.\r\n\r\nLooking for `canvas.toBlob()` for saving canvases? Check out\r\n[canvas-toBlob.js][2] for a cross-browser implementation.\r\n\r\nInstallation\r\n------------------\r\n### npm\r\n```bash\r\n$ npm install file-saverjs\r\n```\r\n\r\n### bower\r\n```bash\r\n$ bower install file-saverjs\r\n```\r\n\r\n\r\nSupported browsers\r\n------------------\r\n\r\n| Browser        | Constructs as | Filenames    | Max Blob Size | Dependencies |\r\n| -------------- | ------------- | ------------ | ------------- | ------------ |\r\n| Firefox 20+    | Blob          | Yes          | 800 MiB       | None         |\r\n| Firefox < 20   | data: URI     | No           | n\/a           | [Blob.js](https:\/\/github.com\/eligrey\/Blob.js) |\r\n| Chrome         | Blob          | Yes          | [500 MiB][3]  | None         |\r\n| Chrome for Android | Blob      | Yes          | [500 MiB][3]  | None         |\r\n| Edge           | Blob          | Yes          | ?             | None         |\r\n| IE 10+         | Blob          | Yes          | 600 MiB       | None         |\r\n| Opera 15+      | Blob          | Yes          | 500 MiB       | None         |\r\n| Opera < 15     | data: URI     | No           | n\/a           | [Blob.js](https:\/\/github.com\/eligrey\/Blob.js) |\r\n| Safari 6.1+*   | Blob          | No           | ?             | None         |\r\n| Safari < 6     | data: URI     | No           | n\/a           | [Blob.js](https:\/\/github.com\/eligrey\/Blob.js) |\r\n\r\nFeature detection is possible:\r\n\r\n```js\r\ntry {\r\n    var isFileSaverSupported = !!new Blob;\r\n} catch (e) {}\r\n```\r\n\r\n### IE < 10\r\n\r\nIt is possible to save text files in IE < 10 without Flash-based polyfills.\r\nSee [ChenWenBrian and koffsyrup's `saveTextAs()`](https:\/\/github.com\/koffsyrup\/FileSaver.js#examples) for more details.\r\n\r\n### Safari 6.1+\r\n\r\nBlobs may be opened instead of saved sometimes\u2014you may have to direct your Safari users to manually\r\npress <kbd>\u2318<\/kbd>+<kbd>S<\/kbd> to save the file after it is opened. Using the `application\/octet-stream` MIME type to force downloads [can cause issues in Safari](https:\/\/github.com\/eligrey\/FileSaver.js\/issues\/12#issuecomment-47247096).\r\n\r\n### iOS\r\n\r\nsaveAs must be run within a user interaction event such as onTouchDown or onClick; setTimeout will prevent saveAs from triggering. Due to restrictions in iOS saveAs opens in a new window instead of downloading, if you want this fixed please [tell Apple](https:\/\/bugs.webkit.org\/show_bug.cgi?id=102914) how this bug is affecting you.\r\n\r\nSyntax\r\n------\r\n\r\n```js\r\nFileSaver saveAs(Blob\/File data, optional DOMString filename, optional Boolean disableAutoBOM)\r\n```\r\n\r\nPass `true` for `disableAutoBOM` if you don't want FileSaver.js to automatically provide Unicode text encoding hints (see: [byte order mark](https:\/\/en.wikipedia.org\/wiki\/Byte_order_mark)).\r\n\r\nExamples\r\n--------\r\n\r\n### Saving text using with require\r\n```js\r\nvar FileSaver = require('file-saver');\r\nvar blob = new Blob(\r\n```\r\n\r\n### Saving text\r\n\r\n```js\r\nvar blob = new Blob\r\n```\r\n\r\nThe standard W3C File API [`Blob`][4] interface is not available in all browsers.\r\n[Blob.js][5] is a cross-browser `Blob` implementation that solves this.\r\n\r\n### Saving a canvas\r\n\r\n```js\r\nvar canvas = document.getElementByI ctx = canvas.getContex\r\n\/\/ draw to canvas...\r\ncanvas.toBlob(function(blob) {\r\n    saveAs(blob, \r\n});\r\n```\r\n\r\nNote: The standard HTML5 `canvas.toBlob()` method is not available in all browsers.\r\n[canvas-toBlob.js][6] is a cross-browser `canvas.toBlob()` that polyfills this.\r\n\r\n### Saving File\r\n\r\nYou can save a File constructor without specifying a filename. The\r\nFile itself already contains a name, There is a hand full of ways to get a file\r\ninstance (from storage, file input, new constructor)\r\nBut if you still want to change the name, then you can change it in the 2nd argument\r\n\r\n```js\r\nvar file = new File\r\n```\r\n\r\n\r\n\r\n![Tracking image](https:\/\/in.getclicky.com\/212712ns.gif)\r\n\r\n  [1]: http:\/\/eligrey.com\/demos\/FileSaver.js\/\r\n  [2]: https:\/\/github.com\/eligrey\/canvas-toBlob.js\r\n  [3]: https:\/\/code.google.com\/p\/chromium\/issues\/detail?id=375297\r\n  [4]: https:\/\/developer.mozilla.org\/en-US\/docs\/DOM\/Blob\r\n  [5]: https:\/\/github.com\/eligrey\/Blob.js\r\n  [6]: https:\/\/github.com\/eligrey\/canvas-toBlob.js\r\n\r\nContributing\r\n------------\r\n\r\nThe `FileSaver.js` distribution file is compiled with Uglify.js like so:\r\n\r\n```bash\r\nuglifyjs FileSaver.js --mangle --comments \/@source\/ > FileSaver.min.js\r\n# or simply:\r\nnpm run build\r\n```\r\n\r\nPlease make sure you build a production version before submitting a pull request"}]